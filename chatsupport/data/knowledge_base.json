[
  {
    "id": "1",
    "title": "CS 1110 - Introduction to Computing: A Design and Development Perspective",
    "content": "CS 1110 introduces programming and problem solving using Python. It emphasizes software development principles, style, and testing. Topics include procedural statements, loops, functions, recursion, arrays, strings, algorithms, exceptions, and object-oriented programming. The course is designed for students with no prior programming experience. Assumes basic high school mathematics. No calculus or programming experience required."
  },
  {
    "id": "2",
    "title": "CS 1112 - Introduction to Computing: An Engineering and Science Perspective",
    "content": "CS 1112 emphasizes the systematic development of algorithms and programs using Python. Topics include iteration, functions, arrays, strings, recursion, object-oriented programming, algorithms, and data handling and visualization. The course is designed for students with some knowledge of calculus. Programming experience is not required."
  },
  {
    "id": "3",
    "title": "CS 2110 - Object-Oriented Programming and Data Structures",
    "content": "CS 2110 focuses on intermediate programming in Java and introduces software engineering concepts. Topics include object-oriented programming, program correctness, algorithm analysis, recursion, data structures (e.g., lists, trees, hash tables), and event-driven programming. Students are expected to implement nontrivial Java programs and analyze their complexity."
  },
  {
    "id": "4",
    "title": "CS 2800 - Mathematical Foundations of Computing",
    "content": "CS 2800 covers the mathematics that underpins computer science. Topics include mathematical induction, logical proof, set theory, graphs, combinatorics, discrete mathematics, and probability theory. These concepts are explored in the context of applications to various areas of computer science."
  },
  {
    "id": "5",
    "title": "CS 3110 - Data Structures and Functional Programming",
    "content": "CS 3110 is an advanced programming course that emphasizes functional programming techniques and data structures. It covers recursive and higher-order functions, type systems, graph algorithms, balanced trees, memory heaps, and garbage collection. The course also includes techniques for analyzing program performance and correctness."
  },
  {
    "id": "6",
    "title": "CS 3410 - Computer System Organization and Programming",
    "content": "CS 3410 introduces computer organization, systems programming, and the hardware/software interface. Topics include instruction sets, computer arithmetic, memory hierarchies, I/O devices, and multicore architectures. Students will learn assembly language programming and design a pipelined RISC processor."
  },
  {
    "id": "7",
    "title": "CS 3700 - Foundations of AI Reasoning and Decision-Making",
    "content": "CS 3700 introduces major topics in artificial intelligence, including heuristic search, game-playing, knowledge representation and reasoning, planning, probabilistic inference, sequential decision-making, and reinforcement learning."
  },
  {
    "id": "8",
    "title": "CS 3780 - Introduction to Machine Learning",
    "content": "CS 3780 provides an introduction to machine learning, focusing on supervised learning and its theoretical foundations. Topics include regularized linear models, boosting, kernels, deep networks, generative models, online learning, and ethical questions arising in ML applications."
  },
  {
    "id": "9",
    "title": "CS 4110 - [Programming Languages and Logics]",
    "content": "CS 4110 is an introduction to the theory, design, and implementation of programming languages. Topics include operational semantics, type systems, higher-order functions, scope, lambda calculus, laziness, exceptions, side effects, continuations, objects, and modules. Also discussed are logic programming, concurrency, and distributed programming."
  },
  {
    "id": "10",
    "title": "CS 4120 - Introduction to Compilers",
    "content": "CS 4120 introduces the specification and implementation of modern compilers. Topics covered include lexical scanning, parsing, type checking, code generation and translation, an introduction to program analysis and optimization, and compile-time and run-time support for modern programming languages. As part of the course, students will build a working compiler for an object-oriented language."
  },
  {
    "id": "11",
    "title": "CS 4121 - Practicum in Compilers",
    "content": "CS 4121 is a practicum course where students will build a working compiler for an object-oriented language. It is designed to be taken concurrently with CS 4120."
  },
  {
    "id": "12",
    "title": "CS 4320 - Introduction to Database Systems",
    "content": "CS 4320 provides an introduction to modern database and data storage systems. Concepts covered include data models, query languages, database designs, storage structures, access methods, query processing and optimization, transaction management, and recovery in both relational and non-relational data storage systems."
  },
  {
    "id": "13",
    "title": "CS 4321 - Practicum in Database Systems",
    "content": "CS 4321 is a practicum course where students build part of a database system in Java. It is designed to be taken concurrently with CS 4320."
  },
  {
    "id": "14",
    "title": "CS 4410 - Operating Systems",
    "content": "CS 4410 introduces the design of systems programs, with an emphasis on multiprogrammed operating systems. Topics include concurrency, synchronization, deadlocks, memory management, protection, input-output methods, networking, file systems, and security. The impact of network and distributed computing environments on operating systems is also discussed."
  },
  {
    "id": "15",
    "title": "CS 4411 - Practicum in Operating Systems",
    "content": "CS 4411 studies the practical aspects of operating systems through the design and implementation of an operating system kernel that supports multiprogramming, virtual memory, and various input-output devices. All the programming for the project is in a high-level language."
  },
  {
    "id": "16",
    "title": "CS 4414 - Systems Programming",
    "content": "CS 4414 exposes students to programming applications at the systems level and to the operating-systems abstractions that these applications depend on. Students learn to make design choices guided by performance, hardware, security, and other systems properties. Operating systems abstractions covered include process and memory management, file systems and storage, networking, threads and multiprocess concurrency along with synchronization abstractions including locks and condition variables, and security abstractions for isolation and authorization."
  }
]